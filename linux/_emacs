;;; Emacs is not a package manager, and here we load its package manager!
(require 'package)
(dolist (source '(("marmalade" . "http://marmalade-repo.org/packages/")
("elpa" . "http://tromey.com/elpa/")
;; TODO: Maybe, use this after emacs24 is released
;; (development versions of packages)
("melpa" . "http://melpa.milkbox.net/packages/")
))
(add-to-list 'package-archives source t))
(package-initialize)

(setq make-backup-files nil)
;; 设定不产生备份文件

(setq-default make-backup-files nil)
;; 不生成临时文件
(setq visible-bell t)
;;关闭烦人的出错时的提示声
(setq inhibit-startup-message t)
;;关闭emacs启动时的画面
(setq gnus-inhibit-startup-message t)
;;关闭gnus启动时的画面
(fset 'yes-or-no-p 'y-or-n-p)
;; 改变 Emacs 固执的要你回答 yes 的行为。按 y 或空格键表示 yes，n 表示 no。
(set-scroll-bar-mode nil)
;;取消滚动栏
(tool-bar-mode -1)
;;取消工具栏
(menu-bar-mode -1)
;;去掉菜单栏

;(global-hl-line-mode t)
;;高亮当前行

;; 设置另外一些颜色：语法高亮显示的背景和主题，区域选择的背景和主题，二次选择的背景和选择
(set-face-foreground 'highlight "white")
(set-face-background 'highlight "blue")
(set-face-foreground 'region "cyan")
(set-face-background 'region "blue")
(set-face-foreground 'secondary-selection "skyblue")
(set-face-background 'secondary-selection "darkblue")


(setq column-number-mode t)
(setq line-number-mode t)
;;显示行列号
(global-linum-mode t)
(setq mouse-yank-at-point t)
;;不要在鼠标点击的那个地方插入剪贴板内容。我不喜欢那样，经常把我的文档搞的一团糟。我觉得先用光标定位，然后鼠标中键点击要好的多。不管你的光标在文档的那个位置，或是在 minibuffer，鼠标中键一点击，X selection 的内容就被插入到那个位置。
(show-paren-mode t)
;;打开括号匹配显示模式
(setq show-paren-style 'parenthesis)
;;括号匹配时可以高亮显示另外一边的括号，但光标不会烦人的跳到另一个括号处。
(mouse-avoidance-mode 'animate)
;;光标靠近鼠标指针时，让鼠标指针自动让开，别挡住视线。
(setq frame-title-format "Wanghailong@%b")
;;在标题栏显示buffer的名字，而不是 emacs@wangyin.com 这样没用的提示。

;;------------显示时间设置------------------------------
(display-time-mode 1);;启用时间显示设置，在minibuffer上面的那个杠上
(setq display-time-24hr-format t);;时间使用24小时制
(setq display-time-day-and-date t);;时间显示包括日期和具体时间
(setq display-time-use-mail-icon t);;时间栏旁边启用邮件设置
(setq display-time-interval 10);;时间的变化频率，单位多少来着？
(setq display-time-format "%Y-%m-%d (%a) %H:%M")
;;------------显示时间设置结束--------------
(put 'dired-find-alternate-file 'disabled nil)

(defun windmove-up-cycle()
(interactive)
(condition-case nil (windmove-up)
(error (condition-case nil (windmove-down)
(error (condition-case nil (windmove-right) (error (condition-case nil (windmove-left) (error (windmove-up))))))))))
(defun windmove-down-cycle()
(interactive)
(condition-case nil (windmove-down)
(error (condition-case nil (windmove-up)
(error (condition-case nil (windmove-left) (error (condition-case nil (windmove-right) (error (windmove-down))))))))))
(defun windmove-right-cycle()
(interactive)
(condition-case nil (windmove-right)
(error (condition-case nil (windmove-left)
(error (condition-case nil (windmove-up) (error (condition-case nil (windmove-down) (error (windmove-right))))))))))
(defun windmove-left-cycle()
(interactive)
(condition-case nil (windmove-left)
(error (condition-case nil (windmove-right)
(error (condition-case nil (windmove-down) (error (condition-case nil (windmove-up) (error (windmove-left))))))))))
(global-set-key (kbd "C-x <up>") 'windmove-up-cycle)
(global-set-key (kbd "C-x <down>") 'windmove-down-cycle)
(global-set-key (kbd "C-x <right>") 'windmove-right-cycle)
(global-set-key (kbd "C-x <left>") 'windmove-left-cycle)



;;global key config
(global-set-key (kbd "<backtab>") #'(lambda ()
(interactive)
(switch-to-buffer (other-buffer (current-buffer) 1))))
(global-set-key (kbd "M-1") 'delete-other-windows)
(global-set-key (kbd "M-2") 'split-window-below)
(global-set-key (kbd "M-3") 'split-window-right)


;最大化
(defun my-maximized-horz ()
  (interactive)
  (x-send-client-message
   nil 0 nil "_NET_WM_STATE" 32
   '(1 "_NET_WM_STATE_MAXIMIZED_HORZ" 0)))
(defun my-maximized-vert ()
  (interactive)
  (x-send-client-message
   nil 0 nil "_NET_WM_STATE" 32
   '(1 "_NET_WM_STATE_MAXIMIZED_VERT" 0)))
(defun my-maximized ()
  (interactive)
  (x-send-client-message
   nil 0 nil "_NET_WM_STATE" 32
   '(1 "_NET_WM_STATE_MAXIMIZED_HORZ" 0))
  (interactive)
  (x-send-client-message
   nil 0 nil "_NET_WM_STATE" 32
   '(1 "_NET_WM_STATE_MAXIMIZED_VERT" 0)))
(my-maximized)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; git tools ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;git-emacs
;(add-to-list 'load-path "~/.emacs.d/elpa/git-20140128.241")
;(require 'git)

;; autopair
;(require 'autopair)
;(autopair-global-mode)


;;; -------------------auto-complete-------------------------
;;; should be loaded before auto complete so that they can work together

;(add-to-list 'load-path "~/.emacs.d/elpa/auto-complete-20170124.1845")
;(require 'auto-complete)
;(require 'auto-complete-config)
;(auto-complete-mode t)

;(add-to-list 'ac-dictionary-directories "~/.emacs.d/elpa/auto-complete-20170124.1845/dict")
;(ac-config-default)

;; 输入3个字符才开始补全
;(setq ac-auto-start 3)

;; 补全的快捷键，用于需要提前补全-当还没有输入指定个数字符时显示弹出菜单。
;(global-set-key "\M-/" 'auto-complete)  

;;使用增强的popup列表
;(require 'pos-tip)
;(setq ac-quick-help-prefer-pos-tip t)

;;使用quick-help
;(setq ac-use-quick-help t)
;(setq ac-quick-help-delay 0.5)

;; Show 0.8 second later
;(setq ac-auto-show-menu 0.8)

;; 设置tab键的使用模式--??
;;(setq ac-dwim t)

;;使用fuzzy功能
;(setq ac-fuzzy-enable t)

;;菜单
;(setq ac-menu-height 12)
;(set-face-background 'ac-candidate-face "lightgray")
;(set-face-underline 'ac-candidate-face "darkgray")
;(set-face-background 'ac-selection-face "steelblue")


;;; -------------------yasnippet-------------------------
;;; should be loaded before auto complete so that they can work together

;(require 'yasnippet)
;(yas-global-mode t)

;js2-mode config
;(add-to-list 'load-path "~/.emacs.d/elpa/js2-mode-20171224.1833")
;(autoload 'js2-mode "js2-mode" nil t)
;(add-to-list 'auto-mode-alist '("\\.js$" . js2-mode))
;; Better imenu
;(add-hook 'js2-mode-hook #'js2-imenu-extras-mode)

;(require 'js2-refactor)
;(require 'xref-js2)

;(add-hook 'js2-mode-hook #'js2-refactor-mode)
;(setq js2-skip-preprocessor-directives t)
;(js2r-add-keybindings-with-prefix "C-c C-m")
;; eg. extract function with `C-c C-m ef`.
;(define-key js2-refactor-mode-map (kbd "C-c C-e C-f") 'js2r-extract-function)
;(js2r-add-keybindings-with-prefix "C-c C-r")
;(define-key js2-mode-map (kbd "C-k") #'js2r-kill)

;; js-mode (which js2 is based on) binds "M-." which conflicts with xref, so
;; unbind it.
;(define-key js-mode-map (kbd "M-.") nil)

;(add-hook 'js2-mode-hook (lambda ()
;                           (add-hook 'xref-backend-functions #'xref-js2-xref-backend nil t)))

;(add-to-list 'load-path "~/.emacs.d/elpa/tern-20170925.1333")
;(add-hook 'js-mode-hook (lambda () (tern-mode t)))
;(eval-after-load 'tern
;   '(progn
;      (require 'tern-auto-complete)
;      (tern-ac-setup)))
;
(require 'highlight-symbol)
(global-set-key [(control f3)] 'highlight-symbol)
(global-set-key [f3] 'highlight-symbol-next)
(global-set-key [(shift f3)] 'highlight-symbol-prev)
(global-set-key [(meta f3)] 'highlight-symbol-query-replace)

(require 'spaceline-config)
(spaceline-spacemacs-theme)

(require 'ggtags)
(add-hook 'c-mode-common-hook
(lambda ()
(when (derived-mode-p 'c-mode 'c++-mode 'java-mode 'asm-mode)
(ggtags-mode 1))))
(define-key ggtags-mode-map (kbd "C-c g s") 'ggtags-find-other-symbol)
(define-key ggtags-mode-map (kbd "C-c g h") 'ggtags-view-tag-history)
(define-key ggtags-mode-map (kbd "C-c g r") 'ggtags-find-reference)
(define-key ggtags-mode-map (kbd "C-c g f") 'ggtags-find-file)
(define-key ggtags-mode-map (kbd "C-c g c") 'ggtags-create-tags)
(define-key ggtags-mode-map (kbd "C-c g u") 'ggtags-update-tags)
(define-key ggtags-mode-map (kbd "C-c g d") 'ggtags-find-definition)
(define-key ggtags-mode-map (kbd "C-c g g") 'ggtags-grep)
(define-key ggtags-mode-map (kbd "M-,") 'pop-tag-mark)

;;helm
(add-to-list 'load-path "~/.emacs.d/elpa/helm-20180127.2219")
(require 'helm)
(require 'helm-config)
(require 'helm-eshell)
(require 'helm-files)
(require 'helm-grep)
;(require 'helm-flymake)
;(global-set-key (kbd "C-x C-f") 'helm-find-files)
(when (package-installed-p 'helm)
;; change default prefix key
(global-set-key (kbd "C-c h") 'helm-command-prefix)
(global-unset-key (kbd "C-x c"))
;; helm-M-x
(setq helm-M-x-fuzzy-match t)
(global-set-key (kbd "M-x") 'helm-M-x)
;; helm-kill-ring
(global-set-key (kbd "M-y") 'helm-show-kill-ring)
;; helm-mini
(global-set-key (kbd "C-x b") 'helm-mini)
(setq helm-buffers-fuzzy-matching t
helm-recentf-fuzzy-match t)
;; helm-find-files
;(global-set-key (kbd "C-x C-f") 'helm-find-files)
;; helm-imenu
(global-set-key (kbd "C-x c i") 'helm-imenu)
)
(helm-mode 1)
(when (package-installed-p 'helm-projectile)
(projectile-global-mode)
(helm-projectile-on)
)

(add-hook 'c-mode-common-hook   'hs-minor-mode)
(add-hook 'emacs-lisp-mode-hook 'hs-minor-mode)
(add-hook 'java-mode-hook       'hs-minor-mode)
(add-hook 'ess-mode-hook       'hs-minor-mode)
(add-hook 'perl-mode-hook       'hs-minor-mode)
(add-hook 'sh-mode-hook         'hs-minor-mode)
(add-hook 'js2-mode-hook         'hs-minor-mode)

(global-set-key [f4] 'hs-toggle-hiding)

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "Ubuntu Mono" :foundry "unknown" :slant normal :weight normal :height 151 :width normal)))))


(load-theme 'dracula t)

(require 'cc-mode)
(setq default-tab-width 4)
(setq-default c-basic-offset 4 c-default-style "linux")
(setq-default indent-tabs-mode nil)
(set-buffer-file-coding-system 'utf-8-unix)
(set-default-coding-systems 'utf-8-unix)

(define-key c-mode-base-map (kbd "RET") 'newline-and-indent)


;; Fonts setting
;; 设置两个字体变量，一个中文的一个英文的
;; 之所以两个字体大小是因为有的中文和英文相同字号的显示大小不一样，需要手动调整一下。
(setq cjk-font-size 16)
(setq ansi-font-size 16)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   (quote
    (popup-complete fuzzy afternoon-theme tern-auto-complete discover-js2-refactor xref-js2 js2-refactor company-tern company yasnippet spaceline js2-mode highlight-symbol helm ggtags dracula-theme color-theme autopair auto-complete))))
